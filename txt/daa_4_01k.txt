def knapsack(profits, weights, capacity):
    num_items = len(weights)
    
    # Initialize table
    dp = [[0 for _ in range(capacity+1)] for _ in range(num_items+1)]
    
    # Build table
    
    for i in range(1, num_items+1):
        for w in range(1, capacity + 1):
            if weights [i-1] <= w:
                dp[i][w] = max(dp[i-1][w], dp[i-1][w-weights[i-1]]+profits[i-1])
            else:
                dp[i][w] = dp[i-1][w]
            
    max_value = dp[num_items][capacity]
    print(f"Max profit: {max_value}")
    # print("DP Table:")
    # for row in dp:
    #     print(row)
        
    
    selected_items = []
    w = capacity
    for i in range(num_items, 0, -1):
        if dp[i][w] != dp[i-1][w]:
            selected_items.append(i-1)
            w -= weights[i-1]
            
    print("\nItems included: (0-indexed): ", selected_items)
    print("Total weight of items: ", sum(weights[i] for i in selected_items))
    print("Total profit of selected items:", sum(profits[i] for i in selected_items))


    
weights = [20, 14, 5, 12, 39]
profits = [3, 5, 2, 7, 9]
capacity = 50
knapsack(profits, weights, capacity)